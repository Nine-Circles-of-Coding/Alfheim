apply plugin: 'forge'
apply plugin: 'kotlin'
apply plugin: 'idea'

buildscript {
	ext.kotlinVersion = '1.7.10'
	
	repositories {
		mavenCentral()
		maven {
			url = "https://jcenter.bintray.com/"
		}
		maven {
			name = "forge"
			url = "https://maven.minecraftforge.net/"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
			changing = true
		}
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

repositories {
	mavenCentral()
}

group = "main"
version = "44"
archivesBaseName = "Alfheim"

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
	runDir = "minecraft"
}

configurations {
	embed
	compile.extendsFrom(embed)
}

dependencies {
	compile fileTree(dir: 'lib', include: ['*.jar'])
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}

compileJava {
	options.encoding = "UTF-8"
	sourceCompatibility = targetCompatibility = '1.8'
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
	}
}

sourceCompatibility = targetCompatibility = '1.8'

jar {
	duplicatesStrategy = 'include'
	
	from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
	
	manifest {
		attributes 'FMLAT': 'alfheim_at.cfg'
		attributes 'FMLCorePlugin': 'alfheim.common.core.asm.AlfheimHookLoader'
		
		attributes 'FMLCorePluginContainsFMLMod': 'true'
	}
	
	exclude("META-INF/asjlib_at.cfg")
}

processResources {
	duplicatesStrategy = 'include'
	
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version
	
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version': project.version, 'mcversion': project.minecraft.version
	}
	
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
	
	rename '(.+_at.cfg)', 'META-INF/$1'
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = file('build/classes/main/')
	}
}

subprojects {
	apply plugin: 'idea'
}